/**
	Custom reset
**/
html {
  font: 16px/1 sans-serif; }

body {
  margin: 0;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

* {
  box-sizing: border-box; }

h1,
h2,
h3,
h4,
p,
blockquote,
figure,
ol,
ul {
  margin: 0;
  padding: 0; }

strong {
  font-weight: bold; }

a {
  text-decoration: none; }

img {
  max-width: 100%;
  height: auto;
  border: 0;
  vertical-align: bottom; }

li {
  list-style-type: none; }

/**
    Reset / base styles for forms
**/
input {
  border: 0; }

input[type="submit"] {
  cursor: pointer; }
  input[type="submit"]:focus {
    outline: none; }

/**
    Base style for a custom select
**/
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  border-radius: 0; }
  select:focus {
    outline: 0; }

/**
    - Base style for a custom checkbox
    - Uncomment to use it
    - Html :
    <div class="Checkbox">
        <div class="Checkbox__box">
            <input type="checkbox" name="" value="" id="check">
            <label for="check"></label>
        </div>
        <p class="Checkbox__text"></p>
    </div>
**/
/**
    Font functions
    @param $family : name
    @param $size : photoshop size in pixels
    @letterSpacing : Photoshop letter spacing (no unit)
    @lineHeight : Photoshop line-height in pixels
**/
@font-face {
  font-family: '[FONT NAME]';
  src: url("../fonts/[FONT NAME]") format("woff2"), url("../fonts/[FONT NAME]") format("woff");
  font-weight: normal;
  font-style: normal; }

/**
	Common styles for the whole app
**/
body {
  background: #FFF;
  font: 1rem /1.75 "[FONT NAME]", Helvetica, Arial, sans-serif;
  letter-spacing: 0.04em; }

/**
	COMPONENTS
**/
/**
	MODULES
**/
/**
	Media queries
**/
/*
	Adjusting sizes
*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvX3Jlc2V0LnNjc3MiLCJwbHVnaW5zL19mb3JtLnNjc3MiLCJfZnVuY3Rpb25zLnNjc3MiLCJmb250cy9fZm9udHMuc2NzcyIsIm1haW4uc2NzcyIsIl9jb21tb24uc2NzcyIsIm1lZGlhLXF1ZXJpZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILElBQUksQ0FBQTtFQUNBLElBQUksRUFBRSxpQkFBaUIsR0FDMUI7O0FBRUQsSUFBSSxDQUFDO0VBQ0QsTUFBTSxFQUFFLENBQUM7RUFDVCx1QkFBdUIsRUFBRSxTQUFTO0VBQ2xDLHNCQUFzQixFQUFFLFdBQVcsR0FDdEM7O0FBQ0QsQ0FBQyxDQUFBO0VBQ0csVUFBVSxFQUFFLFVBQVUsR0FDekI7O0FBQ0QsRUFBRTtBQUNGLEVBQUU7QUFDRixFQUFFO0FBQ0YsRUFBRTtBQUNGLENBQUM7QUFDRCxVQUFVO0FBQ1YsTUFBTTtBQUNOLEVBQUU7QUFDRixFQUFFLENBQUM7RUFDQyxNQUFNLEVBQUUsQ0FBQztFQUNULE9BQU8sRUFBRSxDQUFDLEdBQ2I7O0FBRUQsTUFBTSxDQUFDO0VBQ0gsV0FBVyxFQUFFLElBQUksR0FDcEI7O0FBRUQsQ0FBQyxDQUFBO0VBQ0EsZUFBZSxFQUFFLElBQUksR0FDckI7O0FBRUQsR0FBRyxDQUFDO0VBQ0EsU0FBUyxFQUFFLElBQUk7RUFDZixNQUFNLEVBQUUsSUFBSTtFQUNaLE1BQU0sRUFBRSxDQUFDO0VBQ1QsY0FBYyxFQUFFLE1BQU0sR0FDekI7O0FBRUQsRUFBRSxDQUFBO0VBQ0UsZUFBZSxFQUFFLElBQUksR0FDeEI7O0FDOUNEOztHQUVHO0FBRUgsS0FBSyxDQUFBO0VBQ0QsTUFBTSxFQUFFLENBQUMsR0FDWjs7QUFFRCxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxFQUFDO0VBQ2hCLE1BQU0sRUFBRSxPQUFPLEdBZ0JsQjtFQWpCRCxBQWNJLEtBZEMsQ0FBQSxJQUFDLENBQUssUUFBTCxBQUFhLENBY2YsTUFBTyxDQUFBO0lBQ0gsT0FBTyxFQUFFLElBQUksR0FDaEI7O0FBR0w7O0dBRUc7QUFDSCxNQUFNLENBQUE7RUFDRixrQkFBa0IsRUFBRSxJQUFJO0VBQ3hCLGVBQWUsRUFBRSxJQUFJO0VBQ3JCLFVBQVUsRUFBRSxJQUFJO0VBQ2hCLE1BQU0sRUFBRSxPQUFPO0VBRWYsYUFBYSxFQUFFLENBQUMsR0FPbkI7RUFiRCxBQVFJLE1BUkUsQUFRRixNQUFPLENBQUM7SUFDSixPQUFPLEVBQUUsQ0FBQyxHQUNiOztBQUtMOzs7Ozs7Ozs7OztHQVdHO0FDeERIOzs7Ozs7R0FNRztBQ05ILFVBQVU7RUFDTixXQUFXLEVBQUUsYUFBYTtFQUMxQixHQUFHLEVBQUUsMkJBQTJCLENBQUMsZUFBZSxFQUMzQywyQkFBMkIsQ0FBQyxjQUFjO0VBQy9DLFdBQVcsRUFBRSxNQUFNO0VBQ25CLFVBQVUsRUFBRSxNQUFNOztBQ010Qjs7R0FFRztBQ2JILElBQUksQ0FBQTtFQUNBLFVBQVUsRUFBRSxJQUFJO0VIWW5CLElBQUksRUFBRSxJQUF1QyxDQUFBLEtBQXFCLENBQUMsYUFBd0IsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVU7RUFHeEgsY0FBYyxFQUFFLE1BQStCLEdHYmhEOztBRGNEOztHQUVHO0FBS0g7O0dBRUc7QUFHSDs7R0FFRztBRS9CSDs7RUFFRSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuXHRDdXN0b20gcmVzZXRcbioqL1xuXG5odG1se1xuICAgIGZvbnQ6IDE2cHgvMSBzYW5zLXNlcmlmO1xufVxuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cbip7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbmJsb2NrcXVvdGUsXG5maWd1cmUsXG5vbCxcbnVsIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuYXtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5pbWcge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyOiAwO1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbmxpe1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cbiIsIi8qKlxuICAgIFJlc2V0IC8gYmFzZSBzdHlsZXMgZm9yIGZvcm1zXG4qKi9cblxuaW5wdXR7XG4gICAgYm9yZGVyOiAwO1xufVxuXG5pbnB1dFt0eXBlPVwic3VibWl0XCJde1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIC8vIFBsYWNlaG9sZGVyIHN0eWxlXG4gICAgLy8gJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgLy9cbiAgICAvLyB9XG4gICAgLy8gJjo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgLy9cbiAgICAvLyB9XG4gICAgLy8gJjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIC8vXG4gICAgLy8gfVxuXG4gICAgJjpmb2N1c3tcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG59XG5cbi8qKlxuICAgIEJhc2Ugc3R5bGUgZm9yIGEgY3VzdG9tIHNlbGVjdFxuKiovXG5zZWxlY3R7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIGJvcmRlci1yYWRpdXM6IDA7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogMDtcbiAgICB9XG5cbiAgICAvLyBiYWNrZ3JvdW5kOnVybCgnLi4vaW1nL2Zvcm0vc2VsZWN0X2Fycm93LnBuZycpICNGRkYgbm8tcmVwZWF0IDEwMCU7XG59XG5cbi8qKlxuICAgIC0gQmFzZSBzdHlsZSBmb3IgYSBjdXN0b20gY2hlY2tib3hcbiAgICAtIFVuY29tbWVudCB0byB1c2UgaXRcbiAgICAtIEh0bWwgOlxuICAgIDxkaXYgY2xhc3M9XCJDaGVja2JveFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiQ2hlY2tib3hfX2JveFwiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiIGlkPVwiY2hlY2tcIj5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJjaGVja1wiPjwvbGFiZWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8cCBjbGFzcz1cIkNoZWNrYm94X190ZXh0XCI+PC9wPlxuICAgIDwvZGl2PlxuKiovXG4vLyAuQ2hlY2tib3h7XG4vLyAgICAgZGlzcGxheTogZmxleDtcbi8vXG4vLyAgICAgJl9fYm94e1xuLy8gICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4vLyAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbi8vICAgICAgICAgLy8gaGVpZ2h0OiAxNnB4O1xuLy8gICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuLy9cbi8vICAgICAgICAgaW5wdXR7XG4vLyAgICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4vL1xuLy8gICAgICAgICAgICAgJjpjaGVja2VkICsgbGFiZWx7XG4vLyAgICAgICAgICAgICAgICAgLy8gQGluY2x1ZGUgc3ByaXRlKCRjaGVja2JveC1jaGVjayk7XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgbGFiZWx7XG4vLyAgICAgICAgICAgICAvLyBAaW5jbHVkZSBzcHJpdGUoJGNoZWNrYm94KTtcbi8vICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbi8vICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBsZWZ0OiAwO1xuLy8gICAgICAgICB9XG4vLyAgICAgfVxuLy9cbi8vXG4vLyAgICAgJl9fdGV4dHtcbi8vICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuLy8gICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuLy8gICAgICAgICBtYXJnaW46IDAgMCAwIDRweDtcbi8vICAgICB9XG4vL1xuLy8gfVxuIiwiLyoqXG4gICAgRm9udCBmdW5jdGlvbnNcbiAgICBAcGFyYW0gJGZhbWlseSA6IG5hbWVcbiAgICBAcGFyYW0gJHNpemUgOiBwaG90b3Nob3Agc2l6ZSBpbiBwaXhlbHNcbiAgICBAbGV0dGVyU3BhY2luZyA6IFBob3Rvc2hvcCBsZXR0ZXIgc3BhY2luZyAobm8gdW5pdClcbiAgICBAbGluZUhlaWdodCA6IFBob3Rvc2hvcCBsaW5lLWhlaWdodCBpbiBwaXhlbHNcbioqL1xuQG1peGluIGZvbnQoICRmYW1pbHkgLCAkc2l6ZSAsICRsZXR0ZXJTcGFjaW5nIDogMCAsICRsaW5lSGVpZ2h0OiAxICkge1xuXG4gICAgQGlmICRsaW5lSGVpZ2h0ICE9IDF7XG5cdFx0JGxpbmVIZWlnaHQgOiAoICRsaW5lSGVpZ2h0IC8gJHNpemUgKTtcbiAgIFx0fVxuXG5cdGZvbnQ6ICggKCAkc2l6ZSAvICRkZWZhdWx0Rm9udFNpemUgKSAqIDFyZW0gKSN7XCIvXCJ9KCAkbGluZUhlaWdodCApIFwiI3skZm9udE5hbWV9I3skZmFtaWx5fVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuXG4gICBcdEBpZiAkbGV0dGVyU3BhY2luZyAhPSAwe1xuXHRcdGxldHRlci1zcGFjaW5nOiAoICRsZXR0ZXJTcGFjaW5nIC8gMTAwMCApICogMWVtO1xuICAgXHR9XG5cblxufSIsIkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnW0ZPTlQgTkFNRV0nO1xuICAgIHNyYzogdXJsKCcuLi9mb250cy9bRk9OVCBOQU1FXScpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybCgnLi4vZm9udHMvW0ZPTlQgTkFNRV0nKSBmb3JtYXQoJ3dvZmYnKTtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn0iLCJAaW1wb3J0IFwicGx1Z2lucy9yZXNldFwiO1xuQGltcG9ydCBcInBsdWdpbnMvZm9ybVwiO1xuQGltcG9ydCBcInNldHRpbmdzXCI7XG5AaW1wb3J0IFwiZnVuY3Rpb25zXCI7XG5AaW1wb3J0IFwiZm9udHMvZm9udHNcIjtcbkBpbXBvcnQgXCJncmlkXCI7XG5cbmJvZHl7XG5cbn1cblxuLyoqXG5cdENvbW1vbiBzdHlsZXMgZm9yIHRoZSB3aG9sZSBhcHBcbioqL1xuQGltcG9ydCBcImNvbW1vbi5zY3NzXCI7XG5cblxuLyoqXG5cdENPTVBPTkVOVFNcbioqL1xuQGltcG9ydCBcImNvbXBvbmVudHMvaGVhZGVyLnNjc3NcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL2Zvb3Rlci5zY3NzXCI7XG5cblxuLyoqXG5cdE1PRFVMRVNcbioqL1xuQGltcG9ydCBcIm1vZHVsZXMvdHlwb2dyYXBoeS5zY3NzXCI7XG5cbi8qKlxuXHRNZWRpYSBxdWVyaWVzXG4qKi9cbkBpbXBvcnQgXCJtZWRpYS1xdWVyaWVzLnNjc3NcIjtcbiIsImJvZHl7XG4gICAgYmFja2dyb3VuZDogI0ZGRjtcbiAgICBAaW5jbHVkZSBmb250KCdbRk9OVCBOQU1FXScsIDE2LCA0MCwgMjgpO1xufSIsIi8qXG5cdEFkanVzdGluZyBzaXplc1xuKi9cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjYwcHgpIHtcbiAgICBcbn1cbiJdfQ== */
